{"version":3,"sources":["../src/datasource.js"],"names":["StreamingDatasource","instanceSettings","$q","url","q","headers","openStreams","options","stream","panelId","Promise","resolve","StreamHandler","open","close"],"mappings":";;;;;;;;;AAAA;;;;IAEaA,mB,WAAAA,mB;AACX,+BAAYC,gBAAZ,EAA8BC,EAA9B,EAAkC;AAAA;;AAChC,SAAKC,GAAL,GAAWF,iBAAiBE,GAA5B;AACA,SAAKC,CAAL,GAASF,EAAT;AACA,SAAKG,OAAL,GAAe,EAAE,gBAAgB,kBAAlB,EAAf;;AAEA;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACD;;;;0BAEKC,O,EAAS;AACb,UAAIC,SAAS,KAAKF,WAAL,CAAiBC,QAAQE,OAAzB,CAAb;AACA,UAAID,MAAJ,EAAY;AACV,eAAOE,QAAQC,OAAR,CAAgBH,MAAhB,CAAP;AACD;;AAEDA,eAAS,IAAII,6BAAJ,CAAkBL,OAAlB,EAA2B,IAA3B,CAAT;AACA,WAAKD,WAAL,CAAiBC,QAAQE,OAAzB,IAAoCD,MAApC;AACAA,aAAOK,IAAP;;AAEA,aAAOH,QAAQC,OAAR,CAAgBH,MAAhB,CAAP;AACD;;;gCAEWC,O,EAAS;AACnB,UAAID,SAAS,KAAKF,WAAL,CAAiBG,OAAjB,CAAb;AACA,UAAID,MAAJ,EAAY;AACVA,eAAOM,KAAP;AACA,eAAO,KAAKR,WAAL,CAAiBG,OAAjB,CAAP;AACD;AACF","file":"datasource.js","sourcesContent":["import { StreamHandler } from './stream_handler';\n\nexport class StreamingDatasource {\n  constructor(instanceSettings, $q) {\n    this.url = instanceSettings.url;\n    this.q = $q;\n    this.headers = { 'Content-Type': 'application/json' };\n\n    // Keep a list of open streams so we can cancel them when querys/timerange change\n    this.openStreams = [];\n  }\n\n  query(options) {\n    var stream = this.openStreams[options.panelId];\n    if (stream) {\n      return Promise.resolve(stream);\n    }\n\n    stream = new StreamHandler(options, this);\n    this.openStreams[options.panelId] = stream;\n    stream.open();\n\n    return Promise.resolve(stream);\n  }\n\n  closeStream(panelId) {\n    var stream = this.openStreams[panelId];\n    if (stream) {\n      stream.close();\n      delete this.openStreams[panelId];\n    }\n  }\n}\n"]}